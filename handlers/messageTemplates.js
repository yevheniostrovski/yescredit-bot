const TeleBot = require('telebot');
const banks = require('../config/banks');

const approveYesMessage = require('../messages/approveYesMessage');
const approveNoMessage = require('../messages/approveNoMessage');
const approveProgressMessage = require('../messages/approveProgressMessage');

function approveCreditMessage(bot, msg, userId) {
  const messageTemplate = `${ msg.from.first_name }, –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∫–æ—à—Ç–∏?`;
  const replyMarkup = bot.inlineKeyboard([
    [
      bot.inlineButton('–¢–∞–∫, –¥—è–∫—É—é', { callback: 'APPROVE_YES' })
    ],
    [
      bot.inlineButton('–í –ø—Ä–æ—Ü–µ—Å—ñ', { callback: 'APPROVE_PROGRESS' })
    ],
    [
      bot.inlineButton('–ù—ñ, –º–µ–Ω—ñ –≤—ñ–¥–º–æ–≤–∏–ª–∏', { callback: 'APPROVE_NO' })
    ]
  ]);

  bot.sendMessage(userId, messageTemplate, { replyMarkup });

  const handlers = {
    'APPROVE_YES': approveYesMessage,
    'APPROVE_NO': approveNoMessage,
    'APPROVE_PROGRESS': approveProgressMessage
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö callbackQuery
  bot.on('callbackQuery', (callbackQuery) => {
    const handler = handlers[callbackQuery.data];
    if (handler) {
      handler(callbackQuery, bot);
    } else {
      console.log('–ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ callbackQuery:', callbackQuery.data);
    }
  });
}

// dozhimMessage1.js
function dozhimMessage1(bot, msg, key) {
    const offer = banks.find(bank => bank.key === key);
    if (offer) {
        const message = `‚úÖ –ó–∞—è–≤–∫–∞ ‚Ññ607460 —Å—Ö–≤–∞–ª–µ–Ω–∞\n–°—É–º–∞ –¥–æ –∑–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è: –¥–æ 20 000 –≥—Ä–Ω\n\n–ë—ñ–∂–∏ –∑–∞ —Å–≤–æ—ó–º–∏ –≥—Ä–æ—à–∏–º–∞!‚¨á`;
        const buttons = bot.inlineKeyboard([
            [
                bot.inlineButton('–û—Ç—Ä–∏–º–∞—Ç–∏ –≥—Ä–æ—à—ñ', { url: offer.advUrl })
            ]
        ]);
        bot.sendMessage(msg.from.id, message, { replyMarkup: buttons });
    } else {
        console.error('–û—Ñ—Ñ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–ª—é—á–∞:', key);
    }
}

function dozhimMessage2(msg, bot, offersData) {
    const headTitle = `–í–∞–º —Å—Ö–≤–∞–ª–µ–Ω–æ –ø–æ–∑–∏–∫—É –≤ 8 500,00 –≥—Ä–Ω. –Ω–∞ 14 –¥–Ω—ñ–≤, –ø—ñ–¥–ø–∏—à—ñ—Ç—å –¥–æ–≥–æ–≤—ñ—Ä!`;

    let message = '';
    const advUrlPrefix = 'üëâüèª ‚ñ∂ ';
    const buttons = [];
    
    offersData.forEach((offerData, index) => {
        const offer = banks.find(bank => bank.key === offerData.key);
        if (offer) {
            message += `${index === 0 ? '' : '\n\n'}${offerData.text}\n`;
            message += `${advUrlPrefix}[${offer.website}](${offer.advUrl})`; // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
        } else {
            console.error('–û—Ñ—Ñ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–ª—é—á–∞:', offerData.key);
        }
    });

    const advice = `üí°–ü–æ—Ä–∞–¥–∞: –©–æ–± –∑–±—ñ–ª—å—à–∏—Ç–∏ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —ñ —à–≤–∏–¥–∫—ñ—Å—Ç—å —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –ø–æ–∑–∏–∫–∏, –∑–∞–ª–∏—à—Ç–µ –∞–Ω–∫–µ—Ç–∏ –≤—ñ–¥—Ä–∞–∑—É –≤ –∫—ñ–ª—å–∫–æ—Ö –∫–æ–º–ø–∞–Ω—ñ—è—Ö –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —Å—É–º–∞–º–∏!`;

    bot.sendMessage(msg.from.id, headTitle + '\n\n' + message + '\n\n' + advice, { parseMode: 'Markdown' });
}

module.exports = dozhimMessage2;

// dozhimMessage3.js
function dozhimMessage3(bot, msg, offersData) {
    const headTitle = `üí≥ VISA**** 25-05-2024 –ó–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è: 18.200–≥—Ä–Ω\n
–û—Ç—Ä–∏–º—É–≤–∞—á: ${msg.from.first_name}\n\n
–ö–æ—à—Ç–∏ –≥–æ—Ç–æ–≤—ñ –¥–æ –ø–µ—Ä–µ–∫–ª–∞–∑—É.
–ü–µ—Ä–µ—Ö–æ–¥—å—Ç–µ –Ω–∞ —Å–∞–π—Ç–∏ –Ω–∏–∂—á–µ —Ç–∞ –∑–∞–ª–∏—à–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≥—Ä–æ—à–µ–π ‚¨á`;

    let message = '';
    const advUrlPrefix = 'üëâüèª ‚ñ∂ ';
    const buttons = [];
    
    offersData.forEach((offerData, index) => {
        const offer = banks.find(bank => bank.key === offerData.key);
        if (offer) {
            message += `${index === 0 ? '' : '\n\n'}${offerData.text}\n`;
            message += `${advUrlPrefix}[${offer.website}](${offer.advUrl})`; // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
        } else {
            console.error('–û—Ñ—Ñ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–ª—é—á–∞:', offerData.key);
        }
    });

    const advice = `üí°–ü–æ—Ä–∞–¥–∞: –©–æ–± –∑–±—ñ–ª—å—à–∏—Ç–∏ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —ñ —à–≤–∏–¥–∫—ñ—Å—Ç—å —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –ø–æ–∑–∏–∫–∏, –∑–∞–ª–∏—à—Ç–µ –∞–Ω–∫–µ—Ç–∏ –≤—ñ–¥—Ä–∞–∑—É –≤ –∫—ñ–ª—å–∫–æ—Ö –∫–æ–º–ø–∞–Ω—ñ—è—Ö –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —Å—É–º–∞–º–∏!`;

    bot.sendMessage(msg.from.id, headTitle + '\n\n' + message + '\n\n' + advice, { parseMode: 'Markdown' });
}

// dozhimMessage4.js
function dozhimMessage4(msg, bot, key) {
    const offer = banks.find(bank => bank.key === key);
    if (offer) {
        const message = `üòé ${ msg.from.first_name } , 14 567 –≥—Ä–Ω. - —Ü–µ —Ç–≤–æ—è –ø–æ–∑–∏–∫–∞! üòé
–¢–∏ –ø–æ—Ç—Ä–∞–ø–∏–≤ —É 1000 –æ—Å—ñ–±, —è–∫–∏–º –≤–∏–¥–∞–º–æ –ø–æ–∑–∏–∫—É –ø—Ä—è–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ!
–ó–∞–π–º–∏ –¥–æ 15 —Ç–∏—Å—è—á —ñ –≤–∏—Ç—Ä–∞—Ç–∏—Ç–∏ –∫—É–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ üòé

–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ –∑–∞–ø–æ–≤–Ω—é–π –∞–Ω–∫–µ—Ç—É:`;
        const buttons = bot.inlineKeyboard([
            [
                bot.inlineButton('–û—Ç—Ä–∏–º–∞—Ç–∏ –≥—Ä–æ—à—ñ', { url: offer.advUrl })
            ]
        ]);
        bot.sendMessage(msg.from.id, message, { replyMarkup: buttons });
    } else {
        console.error('–û—Ñ—Ñ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–ª—é—á–∞:', key);
    }
}

// dozhimMessage5.js
function dozhimMessage5(msg, bot, key) {
    const offer = banks.find(bank => bank.key === key);
    if (offer) {
        const message = `–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, ${ msg.from.first_name }!
–£ –í–∞—Å —î –ø–æ—Ç–æ—á–Ω—ñ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç—ñ?
–í–∂–µ –æ—Å—å-–æ—Å—å –ø—ñ–¥—Ö–æ–¥–∏—Ç—å —Ç–µ—Ä–º—ñ–Ω –≤—ñ–¥–¥–∞–≤–∞—Ç–∏ –∫–æ—à—Ç–∏?
–ë–µ—Ä—ñ—Ç—å –≤ –Ω–∞—Å 10.000‚Ç¥ –¥–ª—è –ø–æ–≥–∞—à–µ–Ω–Ω—è –í–∞—à–∏—Ö –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç–µ–π.

–ú–∏ –Ω–∞–¥–∞—î–º–æ –ø–æ–∑–∏–∫—É –±–µ–∑ –¥–æ–≤—ñ–¥–∫–∏ –ø—Ä–æ –¥–æ—Ö–æ–¥–∏, –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ç—ñ–ª—å–∫–∏ –ø–∞—Å–ø–æ—Ä—Ç —Ç–∞ –∫–æ–¥.`;
        const buttons = bot.inlineKeyboard([
            [
                bot.inlineButton('–û—Ç—Ä–∏–º–∞—Ç–∏ –≥—Ä–æ—à—ñ', { url: offer.advUrl })
            ]
        ]);
        bot.sendMessage(msg.from.id, message, { replyMarkup: buttons });
    } else {
        console.error('–û—Ñ—Ñ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–ª—é—á–∞:', key);
    }
}

module.exports = {
  approveCreditMessage,
  dozhimMessage1,
  dozhimMessage2,
  dozhimMessage3,
  dozhimMessage4,
  dozhimMessage5
};